server {
    listen          [::]:80 ipv6only=off;
    server_name     vcsjones.com www.vcsjones.com;
    return 301      https://vcsjones.com$request_uri;
}

server {
    listen          [::]:443 ssl http2 ipv6only=off;
    server_name     vcsjones.com www.vcsjones.com;
    root            /var/wwwroot/vcsjones.com/;
    include         /etc/nginx/sites-available/https.conf.include;
    access_log      /var/log/nginx/vcsjones.com-access_log;
    error_log       /var/log/nginx/vcsjones.com-error_log;
    error_page      404 /404;

    if ($host = www.vcsjones.com) {
        return 301 https://vcsjones.com$request_uri;
    }

    location = /modpow {
        access_log off;
        return 302 https://www.mtholyoke.edu/courses/quenell/s2003/ma139/js/powermod.html;
    }

    location = /ovst {
        access_log off;
        return 302 https://github.com/vcsjones/OpenVsixSignTool;
    }

    location = /favicon.ico {
        access_log off;
        expires 1y;
        add_header Cache-Control public;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        return 204;
        break;
    } 
    
    location ~* \.(css\.gz)$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Encoding gzip;
        add_header Vary Accept-Encoding;
        add_header Access-Control-Allow-Origin *;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        types { text/css gz; }
        internal;
    }

    location ~* \.(css\.br)$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Encoding br;
        add_header Vary Accept-Encoding;
        add_header Access-Control-Allow-Origin *;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        types { text/css br; }
        internal;
    }

    location = /robots.txt.gz {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Encoding gzip;
        add_header Vary Accept-Encoding;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        types { text/plain gz; }
        internal;
    }

    location = /robots.txt.br {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Encoding br;
        add_header Vary Accept-Encoding;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        types { text/plain br; }
        internal;
    }
    
    location ~* \.(html?\.gz)$ {
        access_log off;
        expires 1d;
        add_header Cache-Control public always;
        add_header Content-Encoding gzip always;
        add_header Vary Accept-Encoding always;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        include /etc/nginx/sites-available/content-headers.conf.include;
        types { text/html gz; }
        internal;
    }

    location ~* \.(html?\.br)$ {
        access_log off;
        expires 1d;
        add_header Cache-Control public always;
        add_header Content-Encoding br always;
        add_header Vary Accept-Encoding always;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        include /etc/nginx/sites-available/content-headers.conf.include;
        types { text/html br; }
        internal;
    }

    location ~* \.html?$ {
        if ($compext) {
            rewrite ^ $uri$compext last;
        }
        access_log on;
        expires 15m;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        include /etc/nginx/sites-available/content-headers.conf.include;
        add_header Cache-Control public always;
        add_header Vary Accept-Encoding always;
    } 
    
    location ~* \.css$ {
        if ($compext) {
            rewrite ^ $uri$compext last;
        }
        access_log off;
        expires 1y;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin *;
        add_header Vary Accept-Encoding;
    }

    location = /robots.txt {
        if ($compext) {
            rewrite ^ $uri$compext last;
        }
        access_log off;
        expires 1h;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        add_header Cache-Control public;
        add_header Vary Accept-Encoding;
    }
    
    location ~* \.(png|jpeg|jpg)$ {
        access_log off;
        add_header Vary Accept;
        expires max;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        add_header Cache-Control public;
        try_files $uri$webp_suffix $uri =404;
    }
    
    location = /feed.xml {
        expires 15m;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        types { application/rss+xml xml; }
        add_header Cache-Control public;
        add_header Vary Accept-Encoding;
    }
    
    location ~* \. {
        return 444;
    }

    location ~* /etc/passwd {
        return 444;
    }
    
    location / {
        if ($compext) {
            rewrite ^ $uri/index.html$compext last;
        }
        access_log on;
        expires 15m;
        include /etc/nginx/sites-available/sec-headers.conf.include;
        include /etc/nginx/sites-available/content-headers.conf.include;
        add_header Cache-Control public;
        add_header Vary Accept-Encoding;
    }
}
